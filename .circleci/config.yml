version: 2.0

workflows:
  version: 2
  test_and_coverage:
    jobs:
      - test
      - coverage:
          requires:
            - test
jobs:
  test:
    docker:
      - image: rust
    working_directory: ~/battlecode
    steps:
      - checkout # get repo
      - restore_cache: # don't reinstall a bunch of rust stuff every build
          key: battlecode-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target
      - run: |
            # do the build
            cargo test
      - save_cache: # cache compiled objects
          key: battlecode-{{ checksum "Cargo.lock" }}
          paths: 
            - ~/.cargo
            - target
      - persist_to_workspace: # persist test artifacts
          root: target
          paths:
            - debug/*
  
  coverage:
    working_directory: ~/battlecode
    docker:
      # http://sunjay.ca/2016/07/25/rust-code-coverage
      - image: ragnaroek/kcov:v31
    steps:
      - checkout # get repo
      - attach_workspace: # load the test artifacts
          at: target
      - run: |
          get_latest() {
            # might be multiple test binaries with different executables
            # https://stackoverflow.com/questions/5885934/bash-function-to-find-newest-file-matching-pattern
            unset -v latest
            for file in "$1"*; do
              [[ $file -nt $latest ]] && latest=$file
            done
            echo $latest
          }
          kcov --exclude-pattern=/.cargo,/usr/lib --verify target/cov $(get_latest target/debug/battlecode-cli-)
          kcov --exclude-pattern=/.cargo,/usr/lib --verify target/cov $(get_latest target/debug/battlecode_engine-)
          kcov --exclude-pattern=/.cargo,/usr/lib --verify target/cov $(get_latest target/debug/libbattlecode-)

